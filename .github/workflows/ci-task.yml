name: CI

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]

concurrency:
  group: pull-${{ github.ref }}-ci
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

env:
  NEXT_PUBLIC_APP_ENV: test
  NODE_ENV: test
  SOLANA_RPC: "https://api.devnet.solana.com"
  SKIP_ENV_VALIDATION: 1
  AVE_API_KEY: ${{ secrets.AVE_API_KEY }}
  BACKEND_SECRET_KEY: ${{ secrets.BACKEND_SECRET_KEY }}
  JUP_API_KEY: ${{ secrets.JUP_API_KEY }}
  OKX_API_KEY: ${{ secrets.OKX_API_KEY }}
  OKX_API_PASSPHRASE: ${{ secrets.OKX_API_PASSPHRASE }}
  OKX_PROJECT_ID: ${{ secrets.OKX_PROJECT_ID }}
  OKX_SECRET_KEY: ${{ secrets.OKX_SECRET_KEY }}
  ONE_INCH_API_KEY: ${{ secrets.ONE_INCH_API_KEY }}
  PRIVY_SECRET: ${{ secrets.PRIVY_SECRET }}
  PRIVY_VERIFICATION_KEY_BASE64: ${{ secrets.PRIVY_VERIFICATION_KEY_BASE64 }}

jobs:
  lint:
    name: "lint"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: "🐙️ Check out code"
        uses: actions/checkout@v4

      - name: "💽️  Setup"
        id: dash-init
        uses: ./.github/actions/setup

      - name: "🧹 ES Lint"
        shell: bash
        run: |
          pnpm lint

  type-check:
    name: "type check"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: "🐙️ Check out code"
        uses: actions/checkout@v4

      - name: "💽️  Setup"
        id: dash-init
        uses: ./.github/actions/setup

      - name: "🧹 Type check"
        shell: bash
        run: |
          pnpm type-check

  test:
    name: "test"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: "🐙️ Check out code"
        uses: actions/checkout@v4

      - name: "💽️  Setup"
        id: dash-init
        uses: ./.github/actions/setup

      - name: "🧹 Test"
        shell: bash
        run: |
          pnpm test

#  e2e-tests:
#    name: "e2e tests"
#    timeout-minutes: 20
#    runs-on: ubuntu-latest
#    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
#
#    steps:
#      - name: "🐙️  Checkout"
#        id: pull-checkout
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.event.pull_request.head.ref }}
#
#      - name: "📦  Setup"
#        id: pull-install
#        uses: "./.github/actions/setup"
#
#      - name: "📦  Next.js cache"
#        uses: actions/cache@v4
#        with:
#          path: ${{ github.workspace }}/.next/cache
#          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-www
#
#      - name: "📦  Install Playwright Browsers"
#        run: npx playwright install --with-deps
#
#      - name: "🧪  E2E tests"
#        id: pull-e2e-tests
#        shell: bash
#        run: |
#          pnpm test:e2e
#
#      - name: "✅  Output coverage"
#        uses: actions/upload-artifact@v4
#        if: ${{ !cancelled() }}
#        with:
#          name: playwright-report
#          path: tests/e2e/playwright-report/
#          retention-days: 30
